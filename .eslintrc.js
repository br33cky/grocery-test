module.exports = {
  extends: ['expo', 'eslint:recommended', '@react-native-community', 'prettier'],
  plugins: ['simple-import-sort', 'prettier'],
  parserOptions: {
    createDefaultProgram: true,
    tsconfigRootDir: __dirname,
    project: './tsconfig.json',
    sourceType: 'module',
    ecmaFeatures: {
      jsx: true,
    },
  },
  ignorePatterns: ['src/view/@gluestack'],
  rules: {
    'prettier/prettier': ['error', { endOfLine: 'auto' }],
    'simple-import-sort/imports': [
      'error',
      {
        groups: [
          ['^react$', '^react-native$'],
          ['^@?react$', '^@?\\w$'],
          ['^@?\\w'],
          ['hooks|(/)?use'],
          ['^view/hocs'],
          ['^view/components'],
          ['^view'],
          ['./[A-Z][a-zA-Z0-9]'],
          ['^(\\w.*\\/)?(providers|navigation|i18n|api)'],
          ['^(\\w.*\\/)?(store)'],
          ['(\\w.*\\/)?(utils|data)'],
          ['(\\w.*\\/)?(models|types)'],
          ['(\\w.*\\/)?(variables|constants)'],
          ['^'],
          ['^(\\w.*\\/)?(assets)'],
          ['^(.*).style'],
        ],
      },
    ],
    'sort-imports': [
      'error',
      {
        ignoreCase: true,
        ignoreDeclarationSort: true,
        ignoreMemberSort: false,
        memberSyntaxSortOrder: ['none', 'single', 'multiple', 'all'],
        allowSeparatedGroups: true,
      },
    ],
    'react/jsx-sort-props': [
      2,
      {
        callbacksLast: true,
        shorthandFirst: true,
        shorthandLast: false,
        ignoreCase: true,
        noSortAlphabetically: false,
      },
    ],
    'max-len': [0, 120, 2, { ignoreUrls: true }],
    'react/state-in-constructor': [0, 'never'],
    'react/jsx-props-no-spreading': [
      0,
      {
        html: 'ignore',
        custom: 'ignore',
        explicitSpread: 'ignore',
      },
    ],
    'react/jsx-runtime': 'off',
    'react/react-in-jsx-scope': 'off',
    '@typescript-eslint/camelcase': 'off',
    'no-nested-ternary': 'error',
    'no-unneeded-ternary': ['error'],
    'react-native/no-inline-styles': 'error',
    'require-await': 'off',
    camelcase: 'off',
    radix: 'off',
    'implicit-arrow-linebreak': 'off',
    'no-lonely-if': 'error',
    'no-duplicate-imports': 'error',
    'no-useless-computed-key': 'error',
    'no-useless-rename': 'error',
    'no-useless-escape': 'off',
    'no-var': 'error',
    'prefer-arrow-callback': 'error',
    'prefer-template': 'error',
    'react/prop-types': 'off',
    'react/display-name': 'off',
    '@typescript-eslint/no-inferrable-types': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    'newline-after-var': [2, 'always'],
    'keyword-spacing': ['error', { before: true }],
    'eol-last': ['error', 'always'],
    'comma-dangle': ['error', 'always-multiline'],
    'no-console': ['error', { allow: ['warn', 'error', 'info'] }],
    'newline-before-return': 'error',
    '@typescript-eslint/no-unused-vars': ['error'],
    'react/no-unescaped-entities': [
      'error',
      {
        forbid: [
          { char: '>', alternatives: ['&gt;'] },
          { char: '}', alternatives: ['&#125;'] },
        ],
      },
    ],
    'no-use-before-define': 'off',
    '@typescript-eslint/no-use-before-define': ['error'],
    'no-case-declarations': 'off',
    'react-hooks/exhaustive-deps': 'off',
    'no-shadow': 'off',
    '@typescript-eslint/no-shadow': ['error'],
    '@typescript-eslint/interface-name-prefix': 'off',
    'no-multiple-empty-lines': ['error', { max: 1, maxBOF: 1 }],
    'eslint-comments/no-unused-disable': 'off',
  },
};
